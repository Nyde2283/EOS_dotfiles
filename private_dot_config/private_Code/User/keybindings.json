// Placer vos combinaisons de touches dans ce fichier pour remplacer les valeurs par d√©fautauto[]
[
	{
		"key": "ctrl+n",
		"command": "-workbench.action.files.newUntitledFile"
	},
	{
		"key": "ctrl+n",
		"command": "explorer.newFile"
	},
	{
		"key": "ctrl+shift+[Quote]",
		"command": "workbench.action.terminal.new"
	},
	{
		"key": "ctrl+shift+alt+b",
		"command": "workbench.action.toggleActivityBarVisibility"
	},
	{
		"key": "ctrl+shift+alt+o",
		"command": "editor.action.toggleMinimap"
	},
	{
		"key": "alt+numpad4",
		"command": "workbench.action.focusLeftGroup"
	},
	{
		"key": "ctrl+k ctrl+left",
		"command": "-workbench.action.focusLeftGroup"
	},
	{
		"key": "alt+numpad6",
		"command": "workbench.action.focusRightGroup"
	},
	{
		"key": "ctrl+k ctrl+right",
		"command": "-workbench.action.focusRightGroup"
	},
	{
		"key": "alt+numpad8",
		"command": "workbench.action.focusAboveGroup"
	},
	{
		"key": "ctrl+k ctrl+up",
		"command": "-workbench.action.focusAboveGroup"
	},
	{
		"key": "alt+numpad2",
		"command": "workbench.action.focusBelowGroup"
	},
	{
		"key": "ctrl+k ctrl+down",
		"command": "-workbench.action.focusBelowGroup"
	},
	{
		"key": "ctrl+shift+w",
		"command": "-workbench.action.closeWindow"
	},
	{
		"key": "alt+left",
		"command": "-workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+right",
		"command": "-workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+k ctrl+m",
		"command": "-workbench.action.toggleMaximizeEditorGroup",
		"when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
	},
	{
		"key": "ctrl+k ctrl+m",
		"command": "workbench.action.minimizeOtherEditors"
	},
	{
		"key": "ctrl+alt+k ctrl+alt+m",
		"command": "workbench.action.evenEditorWidths"
	},
	{
		"key": "ctrl+shift+c",
		"command": "workbench.action.createTerminalEditorSide",
		"when": "!terminalFocus"
	},
	{
		"key": "ctrl+shift+c",
		"command": "-workbench.action.terminal.openNativeConsole",
		"when": "!terminalFocus"
	},
	{
		"key": "alt+w",
		"command": "-toggleSearchEditorWholeWord",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "alt+w",
		"command": "-workbench.action.terminal.toggleFindWholeWord",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
	},
	{
		"key": "alt+w",
		"command": "-toggleFindWholeWord",
		"when": "editorFocus"
	},
	{
		"key": "alt+w",
		"command": "-toggleSearchWholeWord",
		"when": "searchViewletFocus"
	},
	{
		"key": "ctrl+shift+alt+right",
		"command": "workbench.action.moveActiveEditorGroupRight"
	},
	{
		"key": "ctrl+shift+alt+left",
		"command": "workbench.action.moveActiveEditorGroupLeft"
	},
	{
		"key": "ctrl+shift+alt+up",
		"command": "workbench.action.moveActiveEditorGroupUp"
	},
	{
		"key": "ctrl+shift+alt+down",
		"command": "workbench.action.moveActiveEditorGroupDown"
	},
	{
		"key": "ctrl+shift+alt+t",
		"command": "workbench.view.extension.todo-tree-container"
	},
	{
		"key": "ctrl+shift+[KeyM]",
		"command": "workbench.action.openSettingsJson"
	},
	{
		"key": "ctrl+tab",
		"command": "workbench.action.nextEditorInGroup"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "workbench.action.previousEditorInGroup"
	},
	{
		"key": "ctrl+q",
		"command": "-workbench.action.quit"
	},
	{
		"key": "ctrl+alt+j",
		"command": "workbench.action.toggleMaximizedPanel"
	},
	{
		"key": "ctrl+shift+alt+down",
		"command": "-markdown.extension.onCopyLineDown",
		"when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "ctrl+shift+alt+down",
		"command": "-editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+alt+down",
		"command": "editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+alt+up",
		"command": "-markdown.extension.onCopyLineUp",
		"when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "ctrl+shift+alt+up",
		"command": "-editor.action.copyLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+alt+up",
		"command": "editor.action.copyLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+alt+b",
		"command": "-C_Cpp_Runner.buildSingleFile",
		"when": "C_Cpp_Runner:activatedExtension"
	},
	{
		"key": "ctrl+shift+v",
		"command": "-markdown.showPreview",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+shift+v",
		"command": "markdown.showPreviewToSide",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+k v",
		"command": "-markdown.showPreviewToSide",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+shift+alt+j",
		"command": "workbench.action.toggleStatusbarVisibility"
	},
	{
		"key": "ctrl+k ctrl+z",
		"command": "workbench.action.toggleCenteredLayout"
	},
	{
		"key": "ctrl+[Quote]",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalHasBeenCreated || terminalProcessSupported"
	},
	{
		"key": "ctrl+alt+g",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+alt+g",
		"command": "git-graph.view"
	}
]
